@import url('https://google-fonts.mirrors.sjtug.sjtu.edu.cn/css?family=Noto+Sans+SC');
@import url('https://google-fonts.mirrors.sjtug.sjtu.edu.cn/css?family=Noto+Color+Emoji');

@font-face {
    font-family: Torus;
    font-weight: 400;
    src: url(https://gcore.jsdelivr.net/gh/ppy/osu-web/resources/fonts/torus/Torus-Regular.otf);
}

@font-face {
    font-family: Torus;
    font-weight: 600;
    src: url(https://gcore.jsdelivr.net/gh/ppy/osu-web/resources/fonts/torus/Torus-SemiBold.otf);
}

@font-face {
    font-family: Torus;
    font-weight: 700;
    src: url(https://gcore.jsdelivr.net/gh/ppy/osu-web/resources/fonts/torus/Torus-Bold.otf);
}

@font-face {
    font-family: Torus;
    font-weight: 900;
    src: url(https://gcore.jsdelivr.net/gh/ppy/osu-web/resources/fonts/torus/Torus-Heavy.otf);
}

:root {
    /* Light Theme Colors */
    --light-primary: #6750a4;
    --light-on-primary: #ffffff;
    --light-primary-container: #eaddff;
    --light-on-primary-container: #21005d;

    --light-secondary: #625b71;
    --light-on-secondary: #ffffff;
    --light-secondary-container: #e8def8;
    --light-on-secondary-container: #1d192b;

    --light-tertiary: #7d5260;
    --light-on-tertiary: #ffffff;
    --light-tertiary-container: #ffd8e4;
    --light-on-tertiary-container: #31111d;

    --light-error: #b3261e;
    --light-on-error: #ffffff;
    --light-error-container: #f9dedc;
    --light-on-error-container: #410e0b;

    --light-background: #fffbfe;
    --light-on-background: #1c1b1f;

    --light-surface: #fffbfe;
    --light-on-surface: #1c1b1f;
    --light-surface-dim: #ded8e1;
    --light-surface-bright: #fffbfe;

    --light-surface-variant: #e7e0ec;
    --light-on-surface-variant: #49454f;

    --light-outline: #79747e;
    --light-outline-variant: #cac4d0;

    --light-surface-container-lowest: #ffffff;
    --light-surface-container-low: #f7f2fa;
    --light-surface-container: #f3edf7;
    --light-surface-container-high: #ece6f0;
    --light-surface-container-highest: #e6e0e9;

    --light-inverse-surface: #313033;
    --light-inverse-on-surface: #f4eff4;
    --light-inverse-primary: #d0bcff;

    --light-scrim: #000000;
    --light-shadow: #000000;

    /* Dark Theme Colors */
    --dark-primary: #d0bcff;
    --dark-on-primary: #381e72;
    --dark-primary-container: #4f378b;
    --dark-on-primary-container: #eaddff;

    --dark-secondary: #ccc2dc;
    --dark-on-secondary: #332d41;
    --dark-secondary-container: #4a4458;
    --dark-on-secondary-container: #e8def8;

    --dark-tertiary: #efb8c8;
    --dark-on-tertiary: #492532;
    --dark-tertiary-container: #633b48;
    --dark-on-tertiary-container: #ffd8e4;

    --dark-error: #f2b8b5;
    --dark-on-error: #601410;
    --dark-error-container: #8c1d18;
    --dark-on-error-container: #f9dedc;

    --dark-background: #1c1b1f;
    --dark-on-background: #e6e1e5;

    --dark-surface: #1c1b1f;
    --dark-on-surface: #e6e1e5;
    --dark-surface-dim: #1c1b1f;
    --dark-surface-bright: #3b383e;

    --dark-surface-variant: #49454f;
    --dark-on-surface-variant: #cac4d0;

    --dark-outline: #938f99;
    --dark-outline-variant: #49454f;

    --dark-surface-container-lowest: #0f0d13;
    --dark-surface-container-low: #1d1b20;
    --dark-surface-container: #211f26;
    --dark-surface-container-high: #2b2930;
    --dark-surface-container-highest: #36343b;

    --dark-inverse-surface: #e6e1e5;
    --dark-inverse-on-surface: #313033;
    --dark-inverse-primary: #6750a4;

    --dark-scrim: #000000;
    --dark-shadow: #000000;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Torus', 'Noto Color Emoji', 'Noto Sans SC', sans-serif;
    background-color: var(--surface);
    color: var(--on-surface);
    margin: 0;
    padding: 0;
    line-height: 1.5;
    display: flex;
    justify-content: center;
    min-height: 100vh;
}

body.light-theme {
    --primary: var(--dynamic-primary, var(--light-primary));
    --on-primary: var(--dynamic-on-primary, var(--light-on-primary));
    --primary-container: var(
        --dynamic-primary-container,
        var(--light-primary-container)
    );
    --on-primary-container: var(
        --dynamic-on-primary-container,
        var(--light-on-primary-container)
    );

    --secondary: var(--dynamic-secondary, var(--light-secondary));
    --on-secondary: var(--dynamic-on-secondary, var(--light-on-secondary));
    --secondary-container: var(
        --dynamic-secondary-container,
        var(--light-secondary-container)
    );
    --on-secondary-container: var(
        --dynamic-on-secondary-container,
        var(--light-on-secondary-container)
    );

    --tertiary: var(--dynamic-tertiary, var(--light-tertiary));
    --on-tertiary: var(--dynamic-on-tertiary, var(--light-on-tertiary));
    --tertiary-container: var(
        --dynamic-tertiary-container,
        var(--light-tertiary-container)
    );
    --on-tertiary-container: var(
        --dynamic-on-tertiary-container,
        var(--light-on-tertiary-container)
    );

    --error: var(--dynamic-error, var(--light-error));
    --on-error: var(--dynamic-on-error, var(--light-on-error));
    --error-container: var(
        --dynamic-error-container,
        var(--light-error-container)
    );
    --on-error-container: var(
        --dynamic-on-error-container,
        var(--light-on-error-container)
    );

    --background: var(--dynamic-background, var(--light-background));
    --on-background: var(--dynamic-on-background, var(--light-on-background));

    --surface: var(--dynamic-surface, var(--light-surface));
    --on-surface: var(--dynamic-on-surface, var(--light-on-surface));
    --surface-dim: var(--dynamic-surface-dim, var(--light-surface-dim));
    --surface-bright: var(
        --dynamic-surface-bright,
        var(--light-surface-bright)
    );

    --surface-variant: var(
        --dynamic-surface-variant,
        var(--light-surface-variant)
    );
    --on-surface-variant: var(
        --dynamic-on-surface-variant,
        var(--light-on-surface-variant)
    );

    --outline: var(--dynamic-outline, var(--light-outline));
    --outline-variant: var(
        --dynamic-outline-variant,
        var(--light-outline-variant)
    );

    --surface-container-lowest: var(
        --dynamic-surface-container-lowest,
        var(--light-surface-container-lowest)
    );
    --surface-container-low: var(
        --dynamic-surface-container-low,
        var(--light-surface-container-low)
    );
    --surface-container: var(
        --dynamic-surface-container,
        var(--light-surface-container)
    );
    --surface-container-high: var(
        --dynamic-surface-container-high,
        var(--light-surface-container-high)
    );
    --surface-container-highest: var(
        --dynamic-surface-container-highest,
        var(--light-surface-container-highest)
    );

    --inverse-surface: var(
        --dynamic-inverse-surface,
        var(--light-inverse-surface)
    );
    --inverse-on-surface: var(
        --dynamic-inverse-on-surface,
        var(--light-inverse-on-surface)
    );
    --inverse-primary: var(
        --dynamic-inverse-primary,
        var(--light-inverse-primary)
    );

    --scrim: var(--dynamic-scrim, var(--light-scrim));
    --shadow: var(--dynamic-shadow, var(--light-shadow));
}

body.dark-theme {
    --primary: var(--dynamic-primary, var(--dark-primary));
    --on-primary: var(--dynamic-on-primary, var(--dark-on-primary));
    --primary-container: var(
        --dynamic-primary-container,
        var(--dark-primary-container)
    );
    --on-primary-container: var(
        --dynamic-on-primary-container,
        var(--dark-on-primary-container)
    );

    --secondary: var(--dynamic-secondary, var(--dark-secondary));
    --on-secondary: var(--dynamic-on-secondary, var(--dark-on-secondary));
    --secondary-container: var(
        --dynamic-secondary-container,
        var(--dark-secondary-container)
    );
    --on-secondary-container: var(
        --dynamic-on-secondary-container,
        var(--dark-on-secondary-container)
    );

    --tertiary: var(--dynamic-tertiary, var(--dark-tertiary));
    --on-tertiary: var(--dynamic-on-tertiary, var(--dark-on-tertiary));
    --tertiary-container: var(
        --dynamic-tertiary-container,
        var(--dark-tertiary-container)
    );
    --on-tertiary-container: var(
        --dynamic-on-tertiary-container,
        var(--dark-on-tertiary-container)
    );

    --error: var(--dynamic-error, var(--dark-error));
    --on-error: var(--dynamic-on-error, var(--dark-on-error));
    --error-container: var(
        --dynamic-error-container,
        var(--dark-error-container)
    );
    --on-error-container: var(
        --dynamic-on-error-container,
        var(--dark-on-error-container)
    );

    --background: var(--dynamic-background, var(--dark-background));
    --on-background: var(--dynamic-on-background, var(--dark-on-background));

    --surface: var(--dynamic-surface, var(--dark-surface));
    --on-surface: var(--dynamic-on-surface, var(--dark-on-surface));
    --surface-dim: var(--dynamic-surface-dim, var(--dark-surface-dim));
    --surface-bright: var(--dynamic-surface-bright, var(--dark-surface-bright));

    --surface-variant: var(
        --dynamic-surface-variant,
        var(--dark-surface-variant)
    );
    --on-surface-variant: var(
        --dynamic-on-surface-variant,
        var(--dark-on-surface-variant)
    );

    --outline: var(--dynamic-outline, var(--dark-outline));
    --outline-variant: var(
        --dynamic-outline-variant,
        var(--dark-outline-variant)
    );

    --surface-container-lowest: var(
        --dynamic-surface-container-lowest,
        var(--dark-surface-container-lowest)
    );
    --surface-container-low: var(
        --dynamic-surface-container-low,
        var(--dark-surface-container-low)
    );
    --surface-container: var(
        --dynamic-surface-container,
        var(--dark-surface-container)
    );
    --surface-container-high: var(
        --dynamic-surface-container-high,
        var(--dark-surface-container-high)
    );
    --surface-container-highest: var(
        --dynamic-surface-container-highest,
        var(--dark-surface-container-highest)
    );

    --inverse-surface: var(
        --dynamic-inverse-surface,
        var(--dark-inverse-surface)
    );
    --inverse-on-surface: var(
        --dynamic-inverse-on-surface,
        var(--dark-inverse-on-surface)
    );
    --inverse-primary: var(
        --dynamic-inverse-primary,
        var(--dark-inverse-primary)
    );

    --scrim: var(--dynamic-scrim, var(--dark-scrim));
    --shadow: var(--dynamic-shadow, var(--dark-shadow));
}

.container {
    width: 900px;
    padding: 16px;
}

.header {
    text-align: center;
    padding: 24px 0;
    margin-bottom: 24px;
}

.header h1 {
    font-size: 34px;
    font-weight: 700;
    color: var(--on-surface);
    margin: 0 0 8px 0;
}

.header .sub-title {
    font-size: 18px;
    color: var(--on-surface-variant);
}

/* 基础组件样式 */
.card {
    background-color: var(--surface-container);
    border-radius: 16px;
    padding: 16px;
}

.card-elevated {
    background-color: var(--surface-container-high);
    border-radius: 16px;
    padding: 16px;
}

.stat-card {
    background-color: var(--surface-container-high);
    border-radius: 16px;
    padding: 16px;
    text-align: center;
}

.summary {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 12px;
    margin-bottom: 24px;
}

/* 统计卡片 - 使用 primary-container 强调重要性 */
.summary-item {
    background-color: var(--surface-container);
    padding: 20px 16px;
    border-radius: 20px;
    text-align: center;
}

.summary-item .label {
    font-size: 16px;
    color: var(--primary);
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    opacity: 0.8;
}

.summary-item .value {
    font-size: 30px;
    font-weight: 700;
    color: var(--primary);
}

.section-title {
    font-size: 26px;
    font-weight: 600;
    margin-top: 24px;
    margin-bottom: 12px;
    color: var(--on-surface);
    display: flex;
    align-items: center;
    gap: 8px;
    padding-left: 4px;
}

.card-grid {
    display: grid;
    gap: 12px;
    margin-bottom: 24px;
}

/* 群友称号和龙王榜使用 2 列布局 */
.card-grid.two-columns {
    grid-template-columns: repeat(2, 1fr);
}

/* 用户统计卡片和称号卡片 - 使用 surface-container-high 保持中性 */
.user-stat-card {
    display: flex;
    align-items: center;
    padding: 16px;
    background: var(--surface-container-high);
    border-radius: 16px;
}

.title-card {
    display: flex;
    align-items: flex-start;
    padding: 16px;
    background: var(--surface-container-high);
    border-radius: 16px;
}

.avatar {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    margin-right: 16px;
    flex-shrink: 0;
    object-fit: cover;
}

.user-details,
.title-details {
    flex-grow: 1;
}

.nickname {
    font-size: 20px;
    font-weight: 600;
    color: var(--on-surface);
    margin-bottom: 8px;
}

.stats-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 6px 16px;
    font-size: 18px;
    color: var(--on-surface);
}

.stats-grid strong {
    color: var(--primary);
    font-weight: 600;
}

.title-badge {
    font-size: 20px;
    font-weight: 600;
    color: var(--primary);
    margin-bottom: 6px;
}

.title-reason {
    font-size: 18px;
    color: var(--on-surface);
    line-height: 1.6;
}

/* 热门话题卡片 - 使用 secondary-container */
.topic-card {
    background: var(--surface-container-high);
    padding: 16px;
    border-radius: 16px;
    margin-bottom: 12px;
}

.topic-title {
    font-weight: 600;
    font-size: 22px;
    margin-bottom: 10px;
    color: var(--on-surface);
}

.topic-contributors {
    font-size: 16px;
    color: var(--on-surface-variant);
    margin-bottom: 12px;
    opacity: 0.8;
}

.topic-detail {
    font-size: 18px;
    color: var(--on-surface-variant);
    line-height: 1.7;
    opacity: 0.9;
}

/* 圣经语录卡片 - 使用 secondary-container */
.quote-card {
    background: var(--surface-container-high);
    padding: 16px;
    border-radius: 16px;
    margin-bottom: 12px;
}

.quote-content {
    font-weight: 600;
    font-size: 22px;
    margin-bottom: 10px;
    color: var(--on-surface);
    font-style: normal;
    background: transparent;
    padding: 0;
    border-radius: 0;
    border-left: 0;
}

.quote-sender {
    font-size: 16px;
    color: var(--on-surface-variant);
    margin-bottom: 12px;
    opacity: 0.8;
}

.quote-reason {
    font-size: 18px;
    color: var(--on-surface-variant);
    line-height: 1.7;
    opacity: 0.9;
}

.quote-footer {
    margin-top: 12px;
    padding-top: 12px;
    border-top: 1px solid var(--outline-variant);
}

.empty-state {
    padding: 32px;
    text-align: center;
    color: var(--on-surface-variant);
    background: var(--surface-container);
    border-radius: 16px;
    font-size: 18px;
}

.activity-chart-container {
    margin-top: 16px;
}

/* 活动图表容器 - 使用 primary-container */
.activity-chart {
    display: flex;
    align-items: flex-end;
    gap: 4px;
    height: 200px;
    background: var(--surface-container);
    border-radius: 20px;
    padding: 24px 16px 16px;
}

.activity-bar {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    min-width: 0;
    height: 100%;
}

.activity-bar-bar {
    width: 100%;
    max-width: 24px;
    background: linear-gradient(to top, var(--primary), var(--secondary));
    border-radius: 8px 8px 0 0;
    transition: all 0.3s ease;
}

.activity-bar:hover .activity-bar-bar {
    opacity: 0.8;
    transform: translateY(-3px);
}

.activity-bar-count {
    font-size: 15px;
    color: var(--primary);
    font-weight: 700;
    margin-bottom: 6px;
    opacity: 1;
}

.activity-bar-label {
    font-size: 15px;
    margin-top: 10px;
    color: var(--primary);
    white-space: nowrap;
    opacity: 0.8;
}

.chart-legend {
    text-align: center;
    margin-top: 12px;
    font-size: 17px;
    color: var(--on-surface-variant);
}

footer {
    text-align: center;
    margin-top: 32px;
    margin-bottom: 16px;
    color: var(--on-surface-variant);
    font-size: 16px;
    padding-top: 16px;
    border-top: 1px solid var(--outline-variant);
}

/* 隐藏的图片用于动态取色 */
#dynamic-color-source {
    display: none;
}

/* User Persona Specific Styles */
.user-header {
    margin-bottom: 24px;
}

.avatar-large {
    width: 128px;
    height: 128px;
    border-radius: 50%;
    margin-bottom: 12px;
    object-fit: cover;
}

/* 用户画像摘要 - 使用 secondary-container */
.persona-summary {
    background: var(--surface-container);
    border-radius: 16px;
    padding: 16px;
    font-size: 18px;
    line-height: 1.6;
    color: var(--on-surface-variant);
    margin-bottom: 24px;
}

.tag-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 25px;
}

.tag {
    background: var(--secondary-container);
    color: var(--on-secondary-container);
    padding: 6px 12px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 500;
}

/* 沟通风格块 - 使用 secondary-container */
.persona-block {
    background: var(--surface-container);
    padding: 16px;
    border-radius: 16px;
    font-size: 18px;
    line-height: 1.6;
    color: var(--on-surface-variant);
}

.persona-block p {
    margin: 0;
}

.persona-block ul {
    margin: 0;
    padding-left: 20px;
}

.persona-block.evidence ul {
    color: var(--on-surface-variant);
    font-size: 17px;
    list-style-type: none;
    padding-left: 0;
}

.persona-block.evidence li {
    border-left: 3px solid var(--primary);
    padding-left: 15px;
    margin-bottom: 15px !important;
}

.persona-block.evidence .evidence-quote {
    color: var(--on-surface);
    font-weight: 500;
    line-height: 1.6;
}

.persona-block.evidence .evidence-meta {
    color: var(--on-surface-variant);
    font-size: 16px;
    margin-top: 4px;
}

.persona-block li {
    margin-bottom: 8px;
}

.persona-block li:last-child {
    margin-bottom: 0;
}

/* 事实依据卡片 - 使用 secondary-container */
.card.outlined-card {
    background: var(--surface-container);
    border-radius: 12px;
    padding: 12px 16px;
    margin-bottom: 12px;
}

.card.outlined-card p {
    margin: 0;
    color: var(--on-surface-variant);
    line-height: 1.6;
    font-size: 18px;
}

.chip {
    display: inline-block;
    background: var(--secondary-container);
    color: var(--on-secondary-container);
    padding: 4px 10px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 500;
}

/*
 * Material Design 3 颜色使用规范
 *
 * Surface 系列 - 背景和容器层级:
 * - surface: 页面主背景
 * - surface-dim: 暗色表面变体
 * - surface-bright: 亮色表面变体
 * - surface-container-lowest: 最低层级容器
 * - surface-container-low: 低层级容器
 * - surface-container: 标准容器（默认卡片）
 * - surface-container-high: 高层级容器（强调卡片，如统计卡）
 * - surface-container-highest: 最高层级容器（特殊强调）
 *
 * 文本颜色:
 * - on-surface: 主要文本（在 surface 上）
 * - on-surface-variant: 次要文本（在 surface 上）
 * - on-background: 背景上的文本
 *
 * Primary 强调色系统:
 * - primary: 主要强调色（按钮、重点元素）
 * - on-primary: primary 上的文本
 * - primary-container: primary 容器背景
 * - on-primary-container: primary 容器上的文本
 *
 * Secondary 次要色系统:
 * - secondary: 次要强调色
 * - on-secondary: secondary 上的文本
 * - secondary-container: 次要容器（如标签、芯片）
 * - on-secondary-container: 次要容器上的文本
 *
 * Tertiary 第三色系统:
 * - tertiary: 第三强调色
 * - on-tertiary: tertiary 上的文本
 * - tertiary-container: 第三容器
 * - on-tertiary-container: 第三容器上的文本
 *
 * Error 错误色系统:
 * - error: 错误/警告色
 * - on-error: error 上的文本
 * - error-container: 错误容器
 * - on-error-container: 错误容器上的文本
 *
 * Inverse 反色系统（用于高对比场景）:
 * - inverse-surface: 反转表面色
 * - inverse-on-surface: 反转表面上的文本
 * - inverse-primary: 反转主色
 *
 * 分隔和边框:
 * - outline: 主要边框
 * - outline-variant: 次要边框/分隔线
 *
 * 阴影和遮罩:
 * - scrim: 遮罩层（半透明黑色）
 * - shadow: 阴影（通常为黑色）
 *
 * 动态颜色优先级：
 * 所有颜色都优先使用 --dynamic-* 变量（从图片提取），
 * 如果动态颜色不可用，则回退到静态的 --light-* 或 --dark-* 变量
 *
 * ===== 本项目颜色使用策略 =====
 *
 * 1. 统计数据卡片 (.summary-item)
 *    - 背景: primary-container
 *    - 文本: on-primary-container
 *    - 用途: 突出重要的数据统计
 *
 * 2. 活动图表 (.activity-chart)
 *    - 背景: primary-container
 *    - 柱状图: primary → secondary 渐变
 *    - 文本: on-primary-container
 *    - 用途: 数据可视化
 *
 * 3. 所有内容卡片 (secondary-container)
 *    - .persona-summary - 用户画像摘要
 *    - .persona-block - 沟通风格块
 *    - .topic-card - 热门话题卡片
 *    - .quote-card - 圣经语录卡片
 *    - .card.outlined-card - 事实依据卡片
 *    - .tag, .chip - 标签/芯片
 *    - 文本: on-secondary-container
 *    - 用途: 统一的内容展示，保持视觉一致性
 *
 * 4. 用户统计/称号卡片 (.user-stat-card, .title-card)
 *    - 背景: surface-container-high
 *    - 文本: on-surface
 *    - 用途: 中性列表项
 *
 * 5. 标题文本 (.section-title)
 *    - 颜色: on-surface
 *    - 用途: 保持简洁，不过度强调
 */
